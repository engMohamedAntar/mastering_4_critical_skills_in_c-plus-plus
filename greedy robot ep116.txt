
/*
#include <iostream>
using namespace std;

int main() {
    //get values of matrix
    int rows,cols;
    cin>>rows>>cols;

    int arr[rows][cols];
    for(int i=0;i<rows;i++)
        for(int j=0;j<cols;j++)
            cin>>arr[i][j];

    int i=0,j=0,sum=0;
    while(i<rows && j<cols)
    {
        sum+=arr[i][j];
        int next_value,best_i=-1,best_j=-1;
        //check whether right is ok
        if(j+1<cols)
        next_value=arr[i][j+1],best_i=i,best_j=j+1;
        //check whether bottom is ok
        if(i+1<rows)
        {
            if(best_i==-1 || arr[i+1][j]>next_value)
                next_value=arr[i+1][j],best_i=i+1,best_j=j;
        }
        //check whether diagonal is ok
        if(j+1<cols && i+1<rows)
        {
            if(best_i==-1 || arr[i+1][j+1]>next_value)
                next_value=arr[i+1][j+1],best_i=i+1,best_j=j+1;
        }

        if(best_i==-1)
             break;
       i=best_i,j=best_j;
    }
    cout<<sum<<endl;
	return 0;
}

*/
/*//shorter solution
#include <iostream>
using namespace std;

int main() {
    //get values of matrix
    int rows,cols;
    cin>>rows>>cols;

    int arr[rows][cols];
    for(int i=0;i<rows;i++)
        for(int j=0;j<cols;j++)
            cin>>arr[i][j];

    int i=0,j=0,sum=0;
    while(i<rows&&j<cols)
    {
        sum+=arr[i][j];
        int next_val,best_i=-1,best_j=-1;
        int di[]={1,0,1};
        int dj[]={0,1,1};
        for(int d=0;d<3;d++)        //first loop ni=i+1 & nj=j
        {                           //second loop ni=i & nj=j+1
            int ni=i+di[d];         //third loop ni=i+1 & nj=j+1
            int nj=j+dj[d];
            if(best_i==-1||next_val<arr[ni][nj])
                next_val=arr[ni][nj],best_i=ni,best_j=nj;
        }

        if(best_i==-1)
            break;
        i=best_i;
        j=best_j;
    }
    cout<<"The total path of the robot is: "<<sum<<endl;
	return 0;
}


*/